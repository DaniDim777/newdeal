1 - Что означает буква L из SOLID?======================================================================================

означает принцип подстановки Лисков, в котором мы должны использовать любой производный класс вместо родительского класса
и вести себя с ним таким же образом без внесения изменений, то есть дочерний класс не должен нарушать тип родительского
класса и его поведение. Методы, которые принимают/возвращают значения с типом суперкласса должны принимать/возвращать
значения типами которых являются его подклассы.

2 - В чём разница между обёрткой и адаптером. А между фабрикой и билдером?==============================================

обёртка - это класс, расширяющий функциональность другого класса без использования наследования, представляется
оригинальным классом, но интерфейс может не изменять или расширять, а также может расширять функциональность

адаптер - объект обеспечивающий взаимодействие двух других объектов, один из которых использует, а другой
предоставляет несовместимый с первым интерфейс, использовать когда есть класс с нужными данными и поведением, но с
неподходящим интерфейсом(интерфейс изменяет, а функциональность не изменяет)

билдер - нужен для создания сложного объекта, который требует пошаговой настройки в несколько этапов,
использовать когда для инициализации требуется большое количество параметров, методов

фабрика - создает объекты определенного типа напрямую, использует абстрактные классы или интерфейсы
в качестве параметров для конструторов, использовать если надо несколько экземпляров класса, но с разными свойствами

3 - Какую проблему решает полиморфизм?==================================================================================

позволяет указать объекту что-то сделать, и результирующее действие будет зависеть от класса объекта.
используется диспетчер динамических методов, с помощью которого разрешается вызов переопределенного метода
во время выполнения.

когда переопределенный метод вызывается через ссылку на суперкласс java определяет, какая версия (в суперклассе или
подклассе) этого метода должна быть выполнена, в зависимости от типа объекта на который ссылаются в момент вызова.

во время выполнения всё зависит от типа объекта, на который делается ссылка (не от типа ссылочной переменной),
который определяет, какая версия замещаемого метода будет выполнена.

ссылочная переменная суперкласса может ссылаться на объект подкласса(как апкастинг) java использует это для разрешения
вызовов переопределенных методов во время выполнения.

4 - В чём недостатки ORM? Как их решать\избегать?=======================================================================

-можно получить более эффективные запросы в sql.
-дополнительное обучение как использовать какую-нибудь не знакомую orm(включая все настройки)
-надо понимать, что происходит под капотом, из-за orm можно избежать понимания баз данных и sql

5 - Когда применяется денормализация? Когда не следует добавлять индекс?

-применяется когда необходимо сделать повышение производительности запросов
-присутствует большое количество таблиц
-использование сложных расчетов
-есть длинные поля включая например blob

индекс не следует использовать:
-если база данных или поля постоянно обновляются
-если база данных небольшая
-маленькая уникальность данных
-если поле не используется с where
-если запрос не будет применяться часто

6 - Какая сложность вставки в дерево? Какая сложность бинарного поиска?
O(log(n)) - для деревьев
O(log(n)) - для бинарного поиска

7 - В чём недостатки аннотаций и рефлексии?

аннотации недостатки:
-реализация функциональности вне объекта
-требуется перекомпиляция, создаются во время компиляции и не могут быть изменены
рефлексия недостатки:
-работает в динамическом режиме, постоянно сканирует классы для загрузки нужного, снижает скорость работы всего приложения.
-можно воздействовать на часть кода, которую не нужно воздействовать(разрешение на закрытые поля классов и изменение значения).
-поддержка кода иногда сложная, надо понять и попытаться отладить

8 - Генерировали ли классы из xsd схем?
нет, но уже посмотрел, не должно быть ничего сложного

9 - Как напишите интеграционный тест?
смотря что тестировать, сделать конфигурацию теста если надо поднять контекст, либо через юнит-тестирование,
создать объекты, добавить данные, выполнить некоторое необходимое действие с объектами
и сравнить фактический результат с ожидаемым